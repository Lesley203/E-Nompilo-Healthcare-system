// <auto-generated />
using System;
using E_Nompilo_Healthcare_system.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Nompilo_Healthcare_system.Migrations
{
    [DbContext(typeof(HealthcareDbContext))]
    [Migration("20231127160647_kjlk")]
    partial class kjlk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_AccountCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Add_Medication_Model", b =>
                {
                    b.Property<int>("MedicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicationId"), 1L, 1);

                    b.Property<string>("ActiveIngredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dosage")
                        .HasColumnType("int");

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicationId");

                    b.HasIndex("Id");

                    b.ToTable("add_Medications");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Alert_V", b =>
                {
                    b.Property<int>("AlertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertID"), 1L, 1);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntendedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastView")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleController")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlertID");

                    b.ToTable("Alert_v");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.AppointmentModel", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<string>("ConsultingPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateofAppointment")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstTimeVisit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfAppointment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingId");

                    b.HasIndex("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.ContraceptivesRefill", b =>
                {
                    b.Property<int>("RefillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefillID"), 1L, 1);

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("int");

                    b.Property<string>("ContraceptiveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastRefillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefillID");

                    b.HasIndex("PatientID");

                    b.ToTable("ContraceptivesRefill");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Counselling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PatientID");

                    b.ToTable("Counselling");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Fam_Screening", b =>
                {
                    b.Property<int>("ScreeningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreeningID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Question1")
                        .HasColumnType("int");

                    b.Property<int>("Question10")
                        .HasColumnType("int");

                    b.Property<int>("Question2")
                        .HasColumnType("int");

                    b.Property<int>("Question3")
                        .HasColumnType("int");

                    b.Property<int>("Question4")
                        .HasColumnType("int");

                    b.Property<int>("Question5")
                        .HasColumnType("int");

                    b.Property<int>("Question6")
                        .HasColumnType("int");

                    b.Property<int>("Question7")
                        .HasColumnType("int");

                    b.Property<int>("Question8")
                        .HasColumnType("int");

                    b.Property<int>("Question9")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("Total");

                    b.HasKey("ScreeningID");

                    b.HasIndex("PatientID");

                    b.ToTable("Fam_Screening");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Fetal_Monitoring", b =>
                {
                    b.Property<int>("FetalMonitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FetalMonitorID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Question1")
                        .HasColumnType("int");

                    b.Property<int>("Question10")
                        .HasColumnType("int");

                    b.Property<int>("Question11")
                        .HasColumnType("int");

                    b.Property<int>("Question2")
                        .HasColumnType("int");

                    b.Property<int>("Question3")
                        .HasColumnType("int");

                    b.Property<int>("Question4")
                        .HasColumnType("int");

                    b.Property<int>("Question5")
                        .HasColumnType("int");

                    b.Property<int>("Question6")
                        .HasColumnType("int");

                    b.Property<int>("Question7")
                        .HasColumnType("int");

                    b.Property<int>("Question8")
                        .HasColumnType("int");

                    b.Property<int>("Question9")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("FetalMonitorID");

                    b.HasIndex("PatientID");

                    b.ToTable("Fetal_Monitoring");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Get_In_Touch_Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Full_Names")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("In_Touch_Contacts");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Get_VaccinatedModel", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RecStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VaccineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VaccineId");

                    b.HasIndex("Id");

                    b.ToTable("Get_Vaccinateds");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.IllnessTreatmentModel", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreatmentId"), 1L, 1);

                    b.Property<int>("DiagnosisId")
                        .HasColumnType("int");

                    b.Property<string>("Illness_Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TreatmentId");

                    b.HasIndex("DiagnosisId");

                    b.ToTable("illnessTreatments");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contraceptives")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Information");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.MedicalFileModel", b =>
                {
                    b.Property<int>("PatientMedicalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientMedicalId"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthcareSystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdentityNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinAddress1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinAddress2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinPostalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinRelationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalInfor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakingMed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("allergies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientMedicalId");

                    b.HasIndex("HealthcareSystemUserId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasFilter("[Id] IS NOT NULL");

                    b.ToTable("medFile");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Pre_Natal_Care_Alert", b =>
                {
                    b.Property<int>("AlertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("IntendedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastView")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlertID");

                    b.ToTable("Pre_Natal_Care_Alert");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Pre_NatalCareNutritionTracking", b =>
                {
                    b.Property<int>("NutritionTrackingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionTrackingID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Question1")
                        .HasColumnType("int");

                    b.Property<int>("Question10")
                        .HasColumnType("int");

                    b.Property<int>("Question11")
                        .HasColumnType("int");

                    b.Property<int>("Question12")
                        .HasColumnType("int");

                    b.Property<int>("Question2")
                        .HasColumnType("int");

                    b.Property<int>("Question3")
                        .HasColumnType("int");

                    b.Property<int>("Question4")
                        .HasColumnType("int");

                    b.Property<int>("Question5")
                        .HasColumnType("int");

                    b.Property<int>("Question6")
                        .HasColumnType("int");

                    b.Property<int>("Question7")
                        .HasColumnType("int");

                    b.Property<int>("Question8")
                        .HasColumnType("int");

                    b.Property<int>("Question9")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("NutritionTrackingID");

                    b.HasIndex("PatientID");

                    b.ToTable("Pre_NatalCareNutritionTracking");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.PrescriptionModel", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionId"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePrescribed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosageamount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrescripId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrescriptionExpirationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("Id");

                    b.HasIndex("PrescripId");

                    b.ToTable("prescriptions");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Referrals", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Patient")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reasons")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReferralDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferredTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificConcerns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Patient");

                    b.ToTable("referrals");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.RefillrequestModel", b =>
                {
                    b.Property<int>("RefillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefillId"), 1L, 1);

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Statuss")
                        .HasColumnType("int");

                    b.HasKey("RefillId");

                    b.HasIndex("Id");

                    b.ToTable("refillrequests");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.RequestContraceptivesInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraceptivetype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PatientID");

                    b.ToTable("RequestContraceptivesInfo");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.RequestPrescripModel", b =>
                {
                    b.Property<int>("PrescripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescripId"), 1L, 1);

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentSymptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MedicalHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrescripId");

                    b.HasIndex("Id");

                    b.ToTable("requestPrescrips");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Resourse", b =>
                {
                    b.Property<int>("InformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InformationID"), 1L, 1);

                    b.Property<string>("AvailabilityandAccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContraceptiveMethods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effectiveness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthBenefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reversibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InformationID");

                    b.ToTable("Resourse");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Resourses", b =>
                {
                    b.Property<int>("InformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InformationID"), 1L, 1);

                    b.Property<string>("AvailabilityandAccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContraceptiveMethods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effectiveness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthBenefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reversibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InformationID");

                    b.ToTable("Resourses");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Reviews")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.SelfDiagnosModel", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagnosisId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SymptomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiagnosisId");

                    b.ToTable("selfDiagnos");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.SelfHistoryModel", b =>
                {
                    b.Property<int>("SelfDigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelfDigId"), 1L, 1);

                    b.Property<int?>("DiagnosisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GetDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SelfDigId");

                    b.HasIndex("DiagnosisId");

                    b.HasIndex("Id");

                    b.ToTable("selfHistories");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.TimeSpanModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Get_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Get_Time");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Ultra_Sound_Image", b =>
                {
                    b.Property<int>("NutritionTrackingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionTrackingID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Question1")
                        .HasColumnType("int");

                    b.Property<int>("Question2")
                        .HasColumnType("int");

                    b.Property<int>("Question3")
                        .HasColumnType("int");

                    b.Property<int>("Question4")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("NutritionTrackingID");

                    b.HasIndex("PatientID");

                    b.ToTable("Ultra_Sound_Image");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Vaccination_Feedback_commentsModel", b =>
                {
                    b.Property<int>("VaccinationCommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationCommentsId"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Vaccination_FeddbackId")
                        .HasColumnType("int");

                    b.HasKey("VaccinationCommentsId");

                    b.HasIndex("Id");

                    b.HasIndex("Vaccination_FeddbackId");

                    b.ToTable("Vaccinations_Comments");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Vaccine_Information", b =>
                {
                    b.Property<int>("InformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InformationID"), 1L, 1);

                    b.Property<int?>("Dose_Number")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VaccineDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InformationID");

                    b.ToTable("Vaccine_Information");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Vaccine_reportingModel", b =>
                {
                    b.Property<int>("Vaccination_FeddbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vaccination_FeddbackId"), 1L, 1);

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PatientFeedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.Property<string>("VaccineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vaccination_FeddbackId");

                    b.HasIndex("Id");

                    b.ToTable("vaccine_Reportings");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.VaccineScreening", b =>
                {
                    b.Property<int>("ScreeningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreeningID"), 1L, 1);

                    b.Property<bool>("Abdominalpain")
                        .HasColumnType("bit");

                    b.Property<bool>("Allergy")
                        .HasColumnType("bit");

                    b.Property<bool>("ChestPressure")
                        .HasColumnType("bit");

                    b.Property<bool>("Cough")
                        .HasColumnType("bit");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Dizzines")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GetDateSurvay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Headache")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TakenVac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("legswelling")
                        .HasColumnType("bit");

                    b.Property<bool>("snezzing")
                        .HasColumnType("bit");

                    b.HasKey("ScreeningID");

                    b.HasIndex("Id");

                    b.ToTable("VaccineScreening");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Add_Medication_Model", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("HCUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.AppointmentModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("HCUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.ContraceptivesRefill", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Counselling", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Fam_Screening", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Fetal_Monitoring", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Get_VaccinatedModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.IllnessTreatmentModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Models.SelfDiagnosModel", "Diagnos")
                        .WithMany()
                        .HasForeignKey("DiagnosisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diagnos");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.MedicalFileModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", null)
                        .WithMany("MedicalFiles")
                        .HasForeignKey("HealthcareSystemUserId");

                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithOne("MedicalFileModel")
                        .HasForeignKey("E_Nompilo_Healthcare_system.Models.MedicalFileModel", "Id");

                    b.Navigation("HCUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Pre_NatalCareNutritionTracking", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.PrescriptionModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.HasOne("E_Nompilo_Healthcare_system.Models.RequestPrescripModel", "Prescription_Request")
                        .WithMany()
                        .HasForeignKey("PrescripId");

                    b.Navigation("HUser");

                    b.Navigation("Prescription_Request");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Referrals", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUsers")
                        .WithMany()
                        .HasForeignKey("Patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainUsers");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.RefillrequestModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("HCUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.RequestContraceptivesInfo", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.RequestPrescripModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("HCUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Review", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.SelfHistoryModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Models.SelfDiagnosModel", "SelfDiagUser")
                        .WithMany()
                        .HasForeignKey("DiagnosisId");

                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("HCUser");

                    b.Navigation("SelfDiagUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Ultra_Sound_Image", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "MainUser")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("MainUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Vaccination_Feedback_commentsModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.HasOne("E_Nompilo_Healthcare_system.Models.Vaccine_reportingModel", "vacc_User")
                        .WithMany()
                        .HasForeignKey("Vaccination_FeddbackId");

                    b.Navigation("HCUser");

                    b.Navigation("vacc_User");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.Vaccine_reportingModel", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "HCUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("HCUser");
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Models.VaccineScreening", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", "User")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Nompilo_Healthcare_system.Areas.Identity.Data.HealthcareSystemUser", b =>
                {
                    b.Navigation("MedicalFileModel")
                        .IsRequired();

                    b.Navigation("MedicalFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
